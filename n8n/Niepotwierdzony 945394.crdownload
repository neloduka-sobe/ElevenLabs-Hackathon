{
  "name": "Data Qualifier",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1000,
        -40
      ],
      "id": "1293c873-2843-4e40-aea7-8be8fb2dd257",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -180,
        220
      ],
      "id": "1567c3b0-2bb3-4a85-b0d9-1df44daed334",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "30EHAa85g4eQMD1d",
          "name": "Google Gemini(PaLM) Api "
        }
      }
    },
    {
      "parameters": {
        "url": "https://healthdata.gov/resource/879u-23sm.csv",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -760,
        -40
      ],
      "id": "58cc343a-a03e-4b85-a93c-5b945f3d9254",
      "name": "Get CSV"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst csvTable = items[0]?.json?.csv_table;\nconst firstLineEndIndex = csvTable.indexOf(\"\\n\");\nconst firstLine = csvTable.substring(0, firstLineEndIndex);\nconst columnNames = firstLine.split(\",\").map((name) => name.replace(/\"/g, \"\"));\n\nreturn { columnNames };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -320,
        -40
      ],
      "id": "7340a539-3fbc-4638-9c03-3e0b80894d0e",
      "name": "Create columns names"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0681de64-433a-46d9-86b6-388b74f3c70a",
              "name": "csv_table",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -540,
        -40
      ],
      "id": "aca957b7-c62b-4ef1-bf6d-b785735b34e3",
      "name": "CSV"
    },
    {
      "parameters": {
        "jsCode": "const csvData = $(\"CSV\").first().json.csv_table;\nconst rows = csvData.split(\"\\n\");\nconst nullCounts = rows.map((row) => (row.match(/,,/g) || []).length);\n\nconst maxNullCount = Math.max(...nullCounts);\nconst totalCells = rows.length * $input.first().json.columnNames.length;\n\nconst nullPercent = (maxNullCount / totalCells) * 100;\n\nlet nullQualifier = \"gold\";\nif (nullPercent > 70) {\n  nullQualifier = \"bronze\";\n} else if (nullPercent > 5) {\n  nullQualifier = \"silver\";\n}\n\nreturn { nullQualifier };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -660,
        240
      ],
      "id": "6e6d01fb-bd90-4d32-86ee-73e2ca1fafb5",
      "name": "Quality base on null numbers"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=csv_table: {{ $('CSV').item.json.csv_table }}",
        "options": {
          "systemMessage": "=Base on {{ $json.columnNames }} classify CSV file base on number of nulls, values in columns. Values have to be appropriate to colum. Tiers: bronze, silver of gold. \n\nOn Output I only want information:\nquality:\"Tier\"\nAnd comment why you chose this tier"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        0,
        100
      ],
      "id": "c1cfdb41-dd6f-4d16-8a87-bfec0938ff59",
      "name": "Classify Data"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        -100,
        -40
      ],
      "id": "ba59e7cf-45c0-429d-8427-bd61724cfb26",
      "name": "Information Extractor"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Classify Data",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get CSV": {
      "main": [
        [
          {
            "node": "CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create columns names": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CSV": {
      "main": [
        [
          {
            "node": "Create columns names",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quality base on null numbers": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f7c300ed-b1db-4e7e-99bd-f96ed9495a4f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c5ae296890d47f5efa8bbbb6a43c2f0959c8b12564819d2a45be51e28a0d178c"
  },
  "id": "kFfiIbGNN7kqLe3Z",
  "tags": []
}