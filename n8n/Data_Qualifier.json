{
  "name": "Data Qualifier",
  "nodes": [
    {
      "parameters": {
        "modelName": "models/gemini-1.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        420,
        80
        860,
        80
      ],
      "id": "1567c3b0-2bb3-4a85-b0d9-1df44daed334",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "30EHAa85g4eQMD1d",
          "name": "Google Gemini(PaLM) Api "
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst csvTable = items[0]?.json?.csv_table;\nconst firstLineEndIndex = csvTable.indexOf(\"\\n\");\nconst firstLine = csvTable.substring(0, firstLineEndIndex);\nconst columnNames = firstLine.split(\",\").map((name) => name.replace(/\"/g, \"\"));\n\nreturn { columnNames };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -120
      ],
      "id": "7340a539-3fbc-4638-9c03-3e0b80894d0e",
      "name": "Create columns names"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0681de64-433a-46d9-86b6-388b74f3c70a",
              "name": "csv_table",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        140,
        -120
      ],
      "id": "aca957b7-c62b-4ef1-bf6d-b785735b34e3",
      "name": "CSV"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        500,
        80
      ],
      "id": "62c3ac78-6a4a-4916-b205-2ca3ed42ecc0",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "30EHAa85g4eQMD1d",
          "name": "Google Gemini(PaLM) Api "
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $('CSV').item.json.csv_table }}",
        "attributes": {
          "attributes": [
            {
              "name": "={{ $json.columnNames }}",
              "description": "columns names to check rows"
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "=You are an expert extraction algorithm.\nBase on input CSV string and knowing about  columns: {{ $json.columnNames }} on output information about \n\"completeness\", \"accuracy\", \"consistency\", \"outliers\", \"bias\",\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        500,
        -120
      ],
      "id": "ba59e7cf-45c0-429d-8427-bd61724cfb26",
      "name": "Classify Data"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Quality: {{ $json.output['provider_name,address1,address2,city,state,zip,public_phone,latitude,longitude,geopoint,last_report_date,is_pap,is_prescribing_svcs_available,url_appointment,home_delivery,is_icatt_site,has_usg_product,has_commercial_product,has_paxlovid,has_commercial_paxlovid,has_usg_paxlovid,has_lagevrio,has_commercial_lagevrio,has_usg_lagevrio,has_veklury,has_oseltamivir_generic,has_oseltamivir_suspension,has_oseltamivir_tamiflu,has_baloxavir,has_zanamivir,has_peramivir,grantee_code,is_flu,is_covid'] }}",
        "options": {
          "systemMessage": "=Base on input data on output give me 3 values \"category\" and \"quality\".\n\"qualiy\" types are \"bronze\",\"silver\" or \"gold\".\nSet \"quality\"  base on information from \"Completeness\", \"Accuracy\", \"Consistency\", \"Outliers\" and \"Bias\" in input.\n\"category\" base on input set this field about category"
          "systemMessage": "=Base on input data on output give me 3 values \"category\" and \"quality\".\n\"qualiy\" types are \"bronze\",\"silver\" or \"gold\".\nSet \"quality\"  base on information from \"Completeness\", \"Accuracy\", \"Consistency\", \"Outliers\" and \"Bias\" in input.\n\"category\" base on input set this field about category"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        880,
        -120
      ],
      "id": "c1cfdb41-dd6f-4d16-8a87-bfec0938ff59",
      "name": "Get Quality of file"
    },
    {
      "parameters": {
        "jsCode": "const rawData = $(\"Get Quality of file\").first().json.output;\nconst cleanedData = rawData.replace(\"```json\\n\", \"\").replace(\"\\n```\", \"\");\nconst jsonData = JSON.parse(cleanedData);\n\nconst url = $(\"Set Metadata\").first().json.url;\nconst license = $(\"Set Metadata\").first().json.license;\n\nreturn [\n  {\n    category: jsonData.category,\n    quality: jsonData.quality,\n    url: url,\n    license: license,\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1460,
        -120
      ],
      "id": "eafc617c-1909-4a69-b7da-f2aa2881b1f0",
      "name": "Map values of Quality"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9623f421-12f0-48a8-8778-08310876e9bf",
              "name": "category",
              "value": "={{ $json.category }}",
              "type": "string"
            },
            {
              "id": "ca8daf0d-6985-430a-b6f1-84478b348df1",
              "name": "date_of_insert",
              "value": "={{ $('Get current Date').item.json.currentDate }}",
              "value": "={{ $('Get current Date').item.json.currentDate }}",
              "type": "string"
            },
            {
              "id": "b6cae9d8-1f26-4026-b26f-e2d8297297e0",
              "name": "quality",
              "value": "={{ $json.quality }}",
              "type": "string"
            },
            {
              "id": "c0ae231a-63d9-4961-a0bc-fe14234ab96e",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            },
            {
              "id": "6abb9962-a9a0-4fe9-a634-5285df641b36",
              "name": "license",
              "value": "={{ $json.license }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        -120
      ],
      "id": "2eaac495-b637-481e-8206-212ea4168af1",
      "name": "Set valuesv for send"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "main",
        "fields": "category,date_of_insert,quality,url,license",
        "fields": "category,date_of_insert,quality,url,license",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        1900,
        -120
      ],
      "id": "b82fde90-0922-484a-b4d9-ad63cc018935",
      "name": "Send data",
      "credentials": {
        "mongoDb": {
          "id": "4ZCGKEyGFEU9kAgy",
          "name": "MongoDB"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "url"
            },
            {
              "name": "license"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -740,
        -120
      ],
      "id": "bdfa946c-cf15-4406-adee-6d3dd53da640",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1240,
        -120
      ],
      "id": "989b0c01-4fb9-4ef6-8e65-efecdbbb938d",
      "name": "Get current Date"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8b3a2173-7e8b-450d-8a40-bd0709bcaed8",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            },
            {
              "id": "f11dc9c5-d807-435a-9019-1b100328bed7",
              "name": "license",
              "value": "={{ $json.license }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -520,
        -120
      ],
      "id": "40a116c3-0095-4b8b-ba69-b56bffb9b813",
      "name": "Set Metadata"
    },
    {
      "parameters": {
        "url": "={{ $('When Executed by Another Workflow').item.json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -300,
        -120
      ],
      "id": "58cc343a-a03e-4b85-a93c-5b945f3d9254",
      "name": "Get Data"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nlet csvString = \"\";\n\nif (typeof items[0]?.json?.data === \"string\") {\n  // If the data is already a CSV string\n  csvString = items[0]?.json?.data;\n} else {\n  // If the data is in JSON format\n  const headers = Object.keys(items[0]?.json);\n  const dataRows = items.map((item) => Object.values(item?.json).join(\",\"));\n  csvString = `${headers.join(\",\")}\\n${dataRows.join(\"\\n\")}`;\n}\n\nreturn { data: csvString };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        -120
      ],
      "id": "6610026a-07d6-4c3c-8183-4cfa24e99613",
      "name": "data to CSV"
    }
  ],
  "pinData": {},
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Get Quality of file",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create columns names": {
      "main": [
        [
          {
            "node": "Classify Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CSV": {
      "main": [
        [
          {
            "node": "Create columns names",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Classify Data",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Classify Data": {
      "main": [
        [
          {
            "node": "Get Quality of file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Quality of file": {
      "main": [
        [
          {
            "node": "Get current Date",
            "node": "Get current Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map values of Quality": {
      "main": [
        [
          {
            "node": "Set valuesv for send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set valuesv for send": {
      "main": [
        [
          {
            "node": "Send data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send data": {
      "main": [
        []
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Set Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get current Date": {
      "main": [
        [
          {
            "node": "Map values of Quality",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Metadata": {
      "main": [
        [
          {
            "node": "Get Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Data": {
      "main": [
        [
          {
            "node": "data to CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "data to CSV": {
      "main": [
        [
          {
            "node": "CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5c8b9c83-c9ad-4090-92cf-e04ab1118bc4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c5ae296890d47f5efa8bbbb6a43c2f0959c8b12564819d2a45be51e28a0d178c"
  },
  "id": "kFfiIbGNN7kqLe3Z",
  "tags": []
}